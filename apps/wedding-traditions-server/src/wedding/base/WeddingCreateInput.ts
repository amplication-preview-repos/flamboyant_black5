/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CulturalPracticeCreateNestedManyWithoutWeddingsInput } from "./CulturalPracticeCreateNestedManyWithoutWeddingsInput";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { RegistrationCreateNestedManyWithoutWeddingsInput } from "./RegistrationCreateNestedManyWithoutWeddingsInput";

@InputType()
class WeddingCreateInput {
  @ApiProperty({
    required: false,
    type: () => CulturalPracticeCreateNestedManyWithoutWeddingsInput,
  })
  @ValidateNested()
  @Type(() => CulturalPracticeCreateNestedManyWithoutWeddingsInput)
  @IsOptional()
  @Field(() => CulturalPracticeCreateNestedManyWithoutWeddingsInput, {
    nullable: true,
  })
  culturalPractices?: CulturalPracticeCreateNestedManyWithoutWeddingsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  date?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  host?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: () => RegistrationCreateNestedManyWithoutWeddingsInput,
  })
  @ValidateNested()
  @Type(() => RegistrationCreateNestedManyWithoutWeddingsInput)
  @IsOptional()
  @Field(() => RegistrationCreateNestedManyWithoutWeddingsInput, {
    nullable: true,
  })
  registrations?: RegistrationCreateNestedManyWithoutWeddingsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;
}

export { WeddingCreateInput as WeddingCreateInput };
